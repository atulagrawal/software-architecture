"use strict";(self.webpackChunksoftware_architecture=self.webpackChunksoftware_architecture||[]).push([[5032],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,m=p["".concat(s,".").concat(d)]||p[d]||f[d]||i;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6301:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const i={},o="Performance",c={unversionedId:"software-architecture/quality-attributes/performance",id:"software-architecture/quality-attributes/performance",title:"Performance",description:"A system is considered to be performance ability if it continues to serve the desired functionality as per the pre-defined SLAs without any degration.",source:"@site/docs/software-architecture/quality-attributes/performance.md",sourceDirName:"software-architecture/quality-attributes",slug:"/software-architecture/quality-attributes/performance",permalink:"/software-architecture/docs/software-architecture/quality-attributes/performance",draft:!1,editUrl:"https://github.com/atulagrawal/software-architecture/tree/main/packages/create-docusaurus/templates/shared/docs/software-architecture/quality-attributes/performance.md",tags:[],version:"current",frontMatter:{},sidebar:"softwareArchitectureSidebar",previous:{title:"Maintainability",permalink:"/software-architecture/docs/software-architecture/quality-attributes/maintainability"},next:{title:"Resiliency and Fault Tolerance",permalink:"/software-architecture/docs/software-architecture/quality-attributes/resiliency and fault tolerance copy"}},s={},u=[],l={toc:u},p="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"performance"},"Performance"),(0,a.kt)("p",null,"A system is considered to be performance ability if it continues to serve the desired functionality as per the pre-defined SLAs without any degration."),(0,a.kt)("p",null,"Exmaples:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A system is perfomrant if the response time, throughput (number of requests per second)for an API continues to be as per 95% and 99% percentile SLAs."),(0,a.kt)("li",{parentName:"ul"},"On the hand, if systems performance continues to degrade e.g. due to memory leaks, resource starvation etc then it would exhibit non-performant behaviour.")),(0,a.kt)("p",null,"Resources and Bottlenecks"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- Sharing\n    - Threads - Common Thread Pools across all APIs in a service.\n    - Machine Instance  - Multiple services in a same host machine.\n    - Disk - \n- Metrics\n    - Query per seconds\n    - Requests per seconds\n")),(0,a.kt)("p",null,"Dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- Downtream services and databases\n- Libraries\n")),(0,a.kt)("p",null,"Core Application Logic"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- Utlisization of Resources for the given business use case\n    - CPU Bound - Blockchain, Crypto\n    - Memory Bound - Data Science\n    - I/O Bound - Web crawling\n- Code / Algorithm Compexlity\n    - Runtime Complexity\n    - Space time complexity\n")),(0,a.kt)("p",null,"Database"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"- Indexing - Helps in querying the data in optimal way.\n- Read replicas - Helps in reducing the load on main database (#shared-resources)\n")),(0,a.kt)("p",null,"Cache"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"-  Helps in reducing the load on databases\n-  Helps in faster turn-around because of in-memory data access\n")))}f.isMDXComponent=!0}}]);