"use strict";(self.webpackChunksoftware_architecture=self.webpackChunksoftware_architecture||[]).push([[9743],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>y});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(a),f=n,y=p["".concat(s,".").concat(f)]||p[f]||m[f]||i;return a?r.createElement(y,l(l({ref:t},c),{},{components:a})):r.createElement(y,l({ref:t},c))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:n,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},5481:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const i={},l="Availability",o={unversionedId:"software-architecture/quality-attributes/availability",id:"software-architecture/quality-attributes/availability",title:"Availability",description:"A system is said to be available if it continues to serve its customer as expected.",source:"@site/docs/software-architecture/quality-attributes/availability.md",sourceDirName:"software-architecture/quality-attributes",slug:"/software-architecture/quality-attributes/availability",permalink:"/software-architecture/docs/software-architecture/quality-attributes/availability",draft:!1,editUrl:"https://github.com/atulagrawal/software-architecture/tree/main/packages/create-docusaurus/templates/shared/docs/software-architecture/quality-attributes/availability.md",tags:[],version:"current",frontMatter:{},sidebar:"softwareArchitectureSidebar",previous:{title:"Quality Attributes",permalink:"/software-architecture/docs/category/quality-attributes"},next:{title:"Configurability",permalink:"/software-architecture/docs/software-architecture/quality-attributes/configurability"}},s={},u=[],c={toc:u},p="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"availability"},"Availability"),(0,n.kt)("p",null,"A system is said to be available if it continues to serve its customer as expected."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"No Single point of failures"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Murphy's law : If anything can go wrong, it will go wrong so plan for failures and have proper fallback plan."),(0,n.kt)("li",{parentName:"ul"},"Plan for Multiple Instances, Multiple Availability Zones, Multiple Data Centers"),(0,n.kt)("li",{parentName:"ul"},"Active-Active vs Active-Passive Architecture"),(0,n.kt)("li",{parentName:"ul"},"Disaster Recovery Plan"),(0,n.kt)("li",{parentName:"ul"},"Capacity Planning of the critial resources",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"In case of high traffic, system can become unresponsive leading to failures and availability issues."))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Stateless Systems"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Move the traffic from Instance A to Instance B in case of failures without any customer friction."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://robertgreiner.com/cap-theorem-revisited/"},"CAP Theorem")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The CAP Theorem states that, in a distributed system (a collection of interconnected nodes that share data.), you can only have two out of the following three guarantees across a write/read pair: Consistency, Availability, and Partition Tolerance - one of them must be sacrificed."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Fail Open vs Fail Close"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"In case of failure, allow the customer to continue the business operations (e.g. allow customer to book order if inventory check fails instead of failing the order placement)"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Event Driven Architecture"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The system will process the events as and when they are available as long as there is no message loss."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Deployment Strategies - Avoid the bugs in new release that could impact the overall availability of the system."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Canary Release (one box testing)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Release is available to only few customers."))),(0,n.kt)("li",{parentName:"ul"},"Blue / Black deployment",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Traffic switchover between pool of services with new release artifact.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Traffic is redirected back to old in case of issues."))),(0,n.kt)("li",{parentName:"ul"},"Ramp strategy"),(0,n.kt)("li",{parentName:"ul"},"Feature toggling")))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Availablity in numbers"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Percentile"),(0,n.kt)("th",{parentName:"tr",align:null},"Downtime per year"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"99%"),(0,n.kt)("td",{parentName:"tr",align:null},"87 hours, 40 minutes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"99.5%"),(0,n.kt)("td",{parentName:"tr",align:null},"43 hours, 50 minutes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"99.9%"),(0,n.kt)("td",{parentName:"tr",align:null},"8 hours, 46 minutes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"99.95%"),(0,n.kt)("td",{parentName:"tr",align:null},"4 hours, 23 minutes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"99.99%"),(0,n.kt)("td",{parentName:"tr",align:null},"52.6 minutes")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"99.999%"),(0,n.kt)("td",{parentName:"tr",align:null},"5.26 minutes"))))))}m.isMDXComponent=!0}}]);